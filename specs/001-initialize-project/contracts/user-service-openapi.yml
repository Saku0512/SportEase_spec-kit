openapi: 3.0.0
info:
  title: User Service
  version: 0.1.0
  description: Manages users, roles, and classes for the SportEase system.

paths:
  /users:
    get:
      summary: List all users
      operationId: listUsers
      tags:
        - users
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: The created user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      summary: Get a user by ID
      operationId: getUserById
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A single user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    put:
      summary: Update a user
      operationId: updateUser
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: The updated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    delete:
      summary: Delete a user
      operationId: deleteUser
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: User deleted successfully

  /users/import:
    post:
      summary: Import users from a CSV file
      operationId: importUsers
      tags:
        - users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '202':
          description: Accepted for processing. Returns a job ID to check status.

  /classes:
    get:
      summary: List all classes
      operationId: listClasses
      tags:
        - classes
      responses:
        '200':
          description: A list of classes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        role:
          $ref: '#/components/schemas/Role'
        class:
          $ref: '#/components/schemas/Class'

    NewUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        role_id:
          type: integer
        class_id:
          type: integer

    UpdateUser:
      type: object
      properties:
        name:
          type: string
        role_id:
          type: integer
        class_id:
          type: integer

    Role:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    Class:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
